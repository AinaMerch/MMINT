# list of variables that drive the experiment setup, comma separated
# (e.g. an individual experiment is made up of 1 value for each of those variables)
variables=minModelElems,maxModelElems,percAnnotations,percMay,percSet,percVar,numConcretizations,property,algorithm,constrainedness,scope
# list of values that each variable can take, comma separated
minModelElems.values=10
maxModelElems.values=10
percAnnotations.values=0.5
percMay.values=0.3
percSet.values=0.3
percVar.values=0.4
numConcretizations.values=15
property.values=(assert(not(forall((n Node))(=>(node n)(exists((e Edge))(and(edge e)(or(= (src e) n)(= (tgt e) n))))))))
algorithm.values=RNF
constrainedness.values=0.5
scope.values=50

# list of operators to be run before randomness kicks in (no statistical significance), comma separated
#experimentOperators=
# list of operators to be run when randomness kicks in (statistical significance), comma separated
statisticsOperators=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph,http://se.cs.toronto.edu/modelepedia/Operator_RandomModelToSMTLIB,http://se.cs.toronto.edu/modelepedia/Operator_RandomModelToAlloy,http://se.cs.toronto.edu/modelepedia/Operator_AlloyChecker
# list of operators that use each variable, comma separated
minModelElems.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
maxModelElems.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
percAnnotations.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
percMay.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
percSet.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
percVar.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelGenerateLabeledGraph
numConcretizations.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelToSMTLIB
property.operator=http://se.cs.toronto.edu/modelepedia/Operator_RandomModelToSMTLIB
algorithm.operator=http://se.cs.toronto.edu/modelepedia/Operator_AlloyChecker
constrainedness.operator=http://se.cs.toronto.edu/modelepedia/Operator_AlloyChecker
scope.operator=http://se.cs.toronto.edu/modelepedia/Operator_AlloyChecker

# seed to initialize the pseudorandom generator
seed=2
# min number of samples before the statistics module can stop
minSamples=1
# max number of samples after which the statistics module will stop anyway
maxSamples=10
# min value that has a meaning for a sample (TODO should be tailored to multiple outputs)
minSampleValue=0
# max value that has a meaning for a sample, -1 if there is no limit (TODO should be tailored to multiple outputs)
maxSampleValue=-1
# distribution type (T_STUDENT_95 or T_STUDENT_99)
distributionType=T_STUDENT_95
# the percentage of requested confidence, so that it stops when (resultUp-resultLow) <= (requestedConfidence*resultAvg)
requestedConfidence=0.5

# list of output names, comma separated
outputs=time
# max processing time of the statistics operators before timeout, in seconds
maxProcessingTime=3
# the operator that generates the specified output
time.operator=http://se.cs.toronto.edu/modelepedia/Operator_AlloyChecker
# default value for the specified output in case of timeout, -1 to just skip the timed out run
time.defaultResult=-1